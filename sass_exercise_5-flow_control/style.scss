@use "function.scss" as f;
@use "variables.scss" as v;
@use "sass:color";

@mixin article-card ($color, $border-color, $font-size) {
    color:$color;
    border: f.rem(1) solid $border-color;
    font-size: $font-size;
}

%text{
    display: flex;
    align-self: center;
    color: v.$green;
    text-decoration: underline;
    text-decoration-color: v.$blue;
    text-decoration-thickness: f.rem(1);
    width: fit-content;
}

div{
    @include article-card(v.$green, v.$red, 1rem);
    display: flex;
    flex-direction: column;
    padding: f.rem(10);
    padding-bottom: f.rem(20);
    gap:1rem;
    h1 {
        @extend %text;
    }
    h2{
        @extend %text;
        padding: 1rem;
        border: f.rem(1) solid v.$red;
    }
    section {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        article{
            border: f.rem(1) solid v.$green;
            p{
                display: flex;
                text-align: center;
            }
            &:nth-child(odd){
                p{
                    color: v.$blue;
                }
            }
            &:nth-child(even){
                p{
                    color: v.$red;
                }
            }
        }
        &:last-child{
            article{
                @include article-card(v.$green, v.$blue, f.rem(24));
                width: 100%;
                display: flex;
                justify-content: center;
                p{
                    color: v.$green;
                    font-size: inherit;
                }
            }
        }
    }
    &:nth-child(1){
        div{
            height: f.rem(45);
            width: f.rem(45);
            @for $var from 1 to 20 {
                $color:v.$black;
                $color: color.adjust($color, $lightness: +5% * $var);
                $background-color: color.invert($color);
                @if $var == 10 {
                    $color:v.$red;
                    $background-color: v.$blue;
                }
                &:nth-child(#{$var}){
                    color:$color;
                    background-color: $background-color;
                }
            }
        }
    }
}

$indexs:1rem, 2rem, 3rem;

@each $index in $indexs {
    .fs-#{$index}{
        font-size: $index;
    }
}